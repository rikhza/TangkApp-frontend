{
  "version": 3,
  "sources": ["../../qr.js/lib/ErrorCorrectLevel.js", "../../qr.js/lib/mode.js", "../../qr.js/lib/8BitByte.js", "../../qr.js/lib/RSBlock.js", "../../qr.js/lib/BitBuffer.js", "../../qr.js/lib/math.js", "../../qr.js/lib/Polynomial.js", "../../qr.js/lib/util.js", "../../qr.js/lib/QRCode.js", "../../react-qr-code/lib/QRCodeSvg/index.js", "../../react-qr-code/lib/index.js"],
  "sourcesContent": ["module.exports = {\r\n\tL : 1,\r\n\tM : 0,\r\n\tQ : 3,\r\n\tH : 2\r\n};\r\n\r\n", "module.exports = {\r\n\tMODE_NUMBER :\t\t1 << 0,\r\n\tMODE_ALPHA_NUM : \t1 << 1,\r\n\tMODE_8BIT_BYTE : \t1 << 2,\r\n\tMODE_KANJI :\t\t1 << 3\r\n};\r\n", "var mode = require('./mode');\r\n\r\nfunction QR8bitByte(data) {\r\n\tthis.mode = mode.MODE_8BIT_BYTE;\r\n\tthis.data = data;\r\n}\r\n\r\nQR8bitByte.prototype = {\r\n\r\n\tgetLength : function(buffer) {\r\n\t\treturn this.data.length;\r\n\t},\r\n\t\r\n\twrite : function(buffer) {\r\n\t\tfor (var i = 0; i < this.data.length; i++) {\r\n\t\t\t// not JIS ...\r\n\t\t\tbuffer.put(this.data.charCodeAt(i), 8);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nmodule.exports = QR8bitByte;\r\n\r\n", "// ErrorCorrectLevel\r\nvar ECL = require('./ErrorCorrectLevel');\r\n\r\nfunction QRRSBlock(totalCount, dataCount) {\r\n\tthis.totalCount = totalCount;\r\n\tthis.dataCount  = dataCount;\r\n}\r\n\r\nQRRSBlock.RS_BLOCK_TABLE = [\r\n\r\n\t// L\r\n\t// M\r\n\t// Q\r\n\t// H\r\n\r\n\t// 1\r\n\t[1, 26, 19],\r\n\t[1, 26, 16],\r\n\t[1, 26, 13],\r\n\t[1, 26, 9],\r\n\t\r\n\t// 2\r\n\t[1, 44, 34],\r\n\t[1, 44, 28],\r\n\t[1, 44, 22],\r\n\t[1, 44, 16],\r\n\r\n\t// 3\r\n\t[1, 70, 55],\r\n\t[1, 70, 44],\r\n\t[2, 35, 17],\r\n\t[2, 35, 13],\r\n\r\n\t// 4\t\t\r\n\t[1, 100, 80],\r\n\t[2, 50, 32],\r\n\t[2, 50, 24],\r\n\t[4, 25, 9],\r\n\t\r\n\t// 5\r\n\t[1, 134, 108],\r\n\t[2, 67, 43],\r\n\t[2, 33, 15, 2, 34, 16],\r\n\t[2, 33, 11, 2, 34, 12],\r\n\t\r\n\t// 6\r\n\t[2, 86, 68],\r\n\t[4, 43, 27],\r\n\t[4, 43, 19],\r\n\t[4, 43, 15],\r\n\t\r\n\t// 7\t\t\r\n\t[2, 98, 78],\r\n\t[4, 49, 31],\r\n\t[2, 32, 14, 4, 33, 15],\r\n\t[4, 39, 13, 1, 40, 14],\r\n\t\r\n\t// 8\r\n\t[2, 121, 97],\r\n\t[2, 60, 38, 2, 61, 39],\r\n\t[4, 40, 18, 2, 41, 19],\r\n\t[4, 40, 14, 2, 41, 15],\r\n\t\r\n\t// 9\r\n\t[2, 146, 116],\r\n\t[3, 58, 36, 2, 59, 37],\r\n\t[4, 36, 16, 4, 37, 17],\r\n\t[4, 36, 12, 4, 37, 13],\r\n\t\r\n\t// 10\t\t\r\n\t[2, 86, 68, 2, 87, 69],\r\n\t[4, 69, 43, 1, 70, 44],\r\n\t[6, 43, 19, 2, 44, 20],\r\n\t[6, 43, 15, 2, 44, 16],\r\n\r\n\t// 11\r\n\t[4, 101, 81],\r\n\t[1, 80, 50, 4, 81, 51],\r\n\t[4, 50, 22, 4, 51, 23],\r\n\t[3, 36, 12, 8, 37, 13],\r\n\r\n\t// 12\r\n\t[2, 116, 92, 2, 117, 93],\r\n\t[6, 58, 36, 2, 59, 37],\r\n\t[4, 46, 20, 6, 47, 21],\r\n\t[7, 42, 14, 4, 43, 15],\r\n\r\n\t// 13\r\n\t[4, 133, 107],\r\n\t[8, 59, 37, 1, 60, 38],\r\n\t[8, 44, 20, 4, 45, 21],\r\n\t[12, 33, 11, 4, 34, 12],\r\n\r\n\t// 14\r\n\t[3, 145, 115, 1, 146, 116],\r\n\t[4, 64, 40, 5, 65, 41],\r\n\t[11, 36, 16, 5, 37, 17],\r\n\t[11, 36, 12, 5, 37, 13],\r\n\r\n\t// 15\r\n\t[5, 109, 87, 1, 110, 88],\r\n\t[5, 65, 41, 5, 66, 42],\r\n\t[5, 54, 24, 7, 55, 25],\r\n\t[11, 36, 12],\r\n\r\n\t// 16\r\n\t[5, 122, 98, 1, 123, 99],\r\n\t[7, 73, 45, 3, 74, 46],\r\n\t[15, 43, 19, 2, 44, 20],\r\n\t[3, 45, 15, 13, 46, 16],\r\n\r\n\t// 17\r\n\t[1, 135, 107, 5, 136, 108],\r\n\t[10, 74, 46, 1, 75, 47],\r\n\t[1, 50, 22, 15, 51, 23],\r\n\t[2, 42, 14, 17, 43, 15],\r\n\r\n\t// 18\r\n\t[5, 150, 120, 1, 151, 121],\r\n\t[9, 69, 43, 4, 70, 44],\r\n\t[17, 50, 22, 1, 51, 23],\r\n\t[2, 42, 14, 19, 43, 15],\r\n\r\n\t// 19\r\n\t[3, 141, 113, 4, 142, 114],\r\n\t[3, 70, 44, 11, 71, 45],\r\n\t[17, 47, 21, 4, 48, 22],\r\n\t[9, 39, 13, 16, 40, 14],\r\n\r\n\t// 20\r\n\t[3, 135, 107, 5, 136, 108],\r\n\t[3, 67, 41, 13, 68, 42],\r\n\t[15, 54, 24, 5, 55, 25],\r\n\t[15, 43, 15, 10, 44, 16],\r\n\r\n\t// 21\r\n\t[4, 144, 116, 4, 145, 117],\r\n\t[17, 68, 42],\r\n\t[17, 50, 22, 6, 51, 23],\r\n\t[19, 46, 16, 6, 47, 17],\r\n\r\n\t// 22\r\n\t[2, 139, 111, 7, 140, 112],\r\n\t[17, 74, 46],\r\n\t[7, 54, 24, 16, 55, 25],\r\n\t[34, 37, 13],\r\n\r\n\t// 23\r\n\t[4, 151, 121, 5, 152, 122],\r\n\t[4, 75, 47, 14, 76, 48],\r\n\t[11, 54, 24, 14, 55, 25],\r\n\t[16, 45, 15, 14, 46, 16],\r\n\r\n\t// 24\r\n\t[6, 147, 117, 4, 148, 118],\r\n\t[6, 73, 45, 14, 74, 46],\r\n\t[11, 54, 24, 16, 55, 25],\r\n\t[30, 46, 16, 2, 47, 17],\r\n\r\n\t// 25\r\n\t[8, 132, 106, 4, 133, 107],\r\n\t[8, 75, 47, 13, 76, 48],\r\n\t[7, 54, 24, 22, 55, 25],\r\n\t[22, 45, 15, 13, 46, 16],\r\n\r\n\t// 26\r\n\t[10, 142, 114, 2, 143, 115],\r\n\t[19, 74, 46, 4, 75, 47],\r\n\t[28, 50, 22, 6, 51, 23],\r\n\t[33, 46, 16, 4, 47, 17],\r\n\r\n\t// 27\r\n\t[8, 152, 122, 4, 153, 123],\r\n\t[22, 73, 45, 3, 74, 46],\r\n\t[8, 53, 23, 26, 54, 24],\r\n\t[12, 45, 15, 28, 46, 16],\r\n\r\n\t// 28\r\n\t[3, 147, 117, 10, 148, 118],\r\n\t[3, 73, 45, 23, 74, 46],\r\n\t[4, 54, 24, 31, 55, 25],\r\n\t[11, 45, 15, 31, 46, 16],\r\n\r\n\t// 29\r\n\t[7, 146, 116, 7, 147, 117],\r\n\t[21, 73, 45, 7, 74, 46],\r\n\t[1, 53, 23, 37, 54, 24],\r\n\t[19, 45, 15, 26, 46, 16],\r\n\r\n\t// 30\r\n\t[5, 145, 115, 10, 146, 116],\r\n\t[19, 75, 47, 10, 76, 48],\r\n\t[15, 54, 24, 25, 55, 25],\r\n\t[23, 45, 15, 25, 46, 16],\r\n\r\n\t// 31\r\n\t[13, 145, 115, 3, 146, 116],\r\n\t[2, 74, 46, 29, 75, 47],\r\n\t[42, 54, 24, 1, 55, 25],\r\n\t[23, 45, 15, 28, 46, 16],\r\n\r\n\t// 32\r\n\t[17, 145, 115],\r\n\t[10, 74, 46, 23, 75, 47],\r\n\t[10, 54, 24, 35, 55, 25],\r\n\t[19, 45, 15, 35, 46, 16],\r\n\r\n\t// 33\r\n\t[17, 145, 115, 1, 146, 116],\r\n\t[14, 74, 46, 21, 75, 47],\r\n\t[29, 54, 24, 19, 55, 25],\r\n\t[11, 45, 15, 46, 46, 16],\r\n\r\n\t// 34\r\n\t[13, 145, 115, 6, 146, 116],\r\n\t[14, 74, 46, 23, 75, 47],\r\n\t[44, 54, 24, 7, 55, 25],\r\n\t[59, 46, 16, 1, 47, 17],\r\n\r\n\t// 35\r\n\t[12, 151, 121, 7, 152, 122],\r\n\t[12, 75, 47, 26, 76, 48],\r\n\t[39, 54, 24, 14, 55, 25],\r\n\t[22, 45, 15, 41, 46, 16],\r\n\r\n\t// 36\r\n\t[6, 151, 121, 14, 152, 122],\r\n\t[6, 75, 47, 34, 76, 48],\r\n\t[46, 54, 24, 10, 55, 25],\r\n\t[2, 45, 15, 64, 46, 16],\r\n\r\n\t// 37\r\n\t[17, 152, 122, 4, 153, 123],\r\n\t[29, 74, 46, 14, 75, 47],\r\n\t[49, 54, 24, 10, 55, 25],\r\n\t[24, 45, 15, 46, 46, 16],\r\n\r\n\t// 38\r\n\t[4, 152, 122, 18, 153, 123],\r\n\t[13, 74, 46, 32, 75, 47],\r\n\t[48, 54, 24, 14, 55, 25],\r\n\t[42, 45, 15, 32, 46, 16],\r\n\r\n\t// 39\r\n\t[20, 147, 117, 4, 148, 118],\r\n\t[40, 75, 47, 7, 76, 48],\r\n\t[43, 54, 24, 22, 55, 25],\r\n\t[10, 45, 15, 67, 46, 16],\r\n\r\n\t// 40\r\n\t[19, 148, 118, 6, 149, 119],\r\n\t[18, 75, 47, 31, 76, 48],\r\n\t[34, 54, 24, 34, 55, 25],\r\n\t[20, 45, 15, 61, 46, 16]\r\n];\r\n\r\nQRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {\r\n\t\r\n\tvar rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\r\n\t\r\n\tif (rsBlock == undefined) {\r\n\t\tthrow new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\r\n\t}\r\n\r\n\tvar length = rsBlock.length / 3;\r\n\t\r\n\tvar list = new Array();\r\n\t\r\n\tfor (var i = 0; i < length; i++) {\r\n\r\n\t\tvar count = rsBlock[i * 3 + 0];\r\n\t\tvar totalCount = rsBlock[i * 3 + 1];\r\n\t\tvar dataCount  = rsBlock[i * 3 + 2];\r\n\r\n\t\tfor (var j = 0; j < count; j++) {\r\n\t\t\tlist.push(new QRRSBlock(totalCount, dataCount) );\t\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn list;\r\n}\r\n\r\nQRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {\r\n\r\n\tswitch(errorCorrectLevel) {\r\n\tcase ECL.L :\r\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\r\n\tcase ECL.M :\r\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\r\n\tcase ECL.Q :\r\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\r\n\tcase ECL.H :\r\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\r\n\tdefault :\r\n\t\treturn undefined;\r\n\t}\r\n}\r\n\r\nmodule.exports = QRRSBlock;\r\n", "function QRBitBuffer() {\r\n\tthis.buffer = new Array();\r\n\tthis.length = 0;\r\n}\r\n\r\nQRBitBuffer.prototype = {\r\n\r\n\tget : function(index) {\r\n\t\tvar bufIndex = Math.floor(index / 8);\r\n\t\treturn ( (this.buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\r\n\t},\r\n\t\r\n\tput : function(num, length) {\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\tthis.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\r\n\t\t}\r\n\t},\r\n\t\r\n\tgetLengthInBits : function() {\r\n\t\treturn this.length;\r\n\t},\r\n\t\r\n\tputBit : function(bit) {\r\n\t\r\n\t\tvar bufIndex = Math.floor(this.length / 8);\r\n\t\tif (this.buffer.length <= bufIndex) {\r\n\t\t\tthis.buffer.push(0);\r\n\t\t}\r\n\t\r\n\t\tif (bit) {\r\n\t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8) );\r\n\t\t}\r\n\t\r\n\t\tthis.length++;\r\n\t}\r\n};\r\n\r\nmodule.exports = QRBitBuffer;\r\n", "var QRMath = {\r\n\r\n\tglog : function(n) {\r\n\t\r\n\t\tif (n < 1) {\r\n\t\t\tthrow new Error(\"glog(\" + n + \")\");\r\n\t\t}\r\n\t\t\r\n\t\treturn QRMath.LOG_TABLE[n];\r\n\t},\r\n\t\r\n\tgexp : function(n) {\r\n\t\r\n\t\twhile (n < 0) {\r\n\t\t\tn += 255;\r\n\t\t}\r\n\t\r\n\t\twhile (n >= 256) {\r\n\t\t\tn -= 255;\r\n\t\t}\r\n\t\r\n\t\treturn QRMath.EXP_TABLE[n];\r\n\t},\r\n\t\r\n\tEXP_TABLE : new Array(256),\r\n\t\r\n\tLOG_TABLE : new Array(256)\r\n\r\n};\r\n\t\r\nfor (var i = 0; i < 8; i++) {\r\n\tQRMath.EXP_TABLE[i] = 1 << i;\r\n}\r\nfor (var i = 8; i < 256; i++) {\r\n\tQRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\r\n\t\t^ QRMath.EXP_TABLE[i - 5]\r\n\t\t^ QRMath.EXP_TABLE[i - 6]\r\n\t\t^ QRMath.EXP_TABLE[i - 8];\r\n}\r\nfor (var i = 0; i < 255; i++) {\r\n\tQRMath.LOG_TABLE[QRMath.EXP_TABLE[i] ] = i;\r\n}\r\n\r\nmodule.exports = QRMath;\r\n", "var math = require('./math');\r\n\r\nfunction QRPolynomial(num, shift) {\r\n\r\n\tif (num.length == undefined) {\r\n\t\tthrow new Error(num.length + \"/\" + shift);\r\n\t}\r\n\r\n\tvar offset = 0;\r\n\r\n\twhile (offset < num.length && num[offset] == 0) {\r\n\t\toffset++;\r\n\t}\r\n\r\n\tthis.num = new Array(num.length - offset + shift);\r\n\tfor (var i = 0; i < num.length - offset; i++) {\r\n\t\tthis.num[i] = num[i + offset];\r\n\t}\r\n}\r\n\r\nQRPolynomial.prototype = {\r\n\r\n\tget : function(index) {\r\n\t\treturn this.num[index];\r\n\t},\r\n\t\r\n\tgetLength : function() {\r\n\t\treturn this.num.length;\r\n\t},\r\n\t\r\n\tmultiply : function(e) {\r\n\t\r\n\t\tvar num = new Array(this.getLength() + e.getLength() - 1);\r\n\t\r\n\t\tfor (var i = 0; i < this.getLength(); i++) {\r\n\t\t\tfor (var j = 0; j < e.getLength(); j++) {\r\n\t\t\t\tnum[i + j] ^= math.gexp(math.glog(this.get(i) ) + math.glog(e.get(j) ) );\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\treturn new QRPolynomial(num, 0);\r\n\t},\r\n\t\r\n\tmod : function(e) {\r\n\t\r\n\t\tif (this.getLength() - e.getLength() < 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\r\n\t\tvar ratio = math.glog(this.get(0) ) - math.glog(e.get(0) );\r\n\t\r\n\t\tvar num = new Array(this.getLength() );\r\n\t\t\r\n\t\tfor (var i = 0; i < this.getLength(); i++) {\r\n\t\t\tnum[i] = this.get(i);\r\n\t\t}\r\n\t\t\r\n\t\tfor (var i = 0; i < e.getLength(); i++) {\r\n\t\t\tnum[i] ^= math.gexp(math.glog(e.get(i) ) + ratio);\r\n\t\t}\r\n\t\r\n\t\t// recursive call\r\n\t\treturn new QRPolynomial(num, 0).mod(e);\r\n\t}\r\n};\r\n\r\nmodule.exports = QRPolynomial;\r\n", "var Mode = require('./mode');\r\nvar Polynomial = require('./Polynomial');\r\nvar math = require('./math');\r\n\r\nvar QRMaskPattern = {\r\n\tPATTERN000 : 0,\r\n\tPATTERN001 : 1,\r\n\tPATTERN010 : 2,\r\n\tPATTERN011 : 3,\r\n\tPATTERN100 : 4,\r\n\tPATTERN101 : 5,\r\n\tPATTERN110 : 6,\r\n\tPATTERN111 : 7\r\n};\r\n\r\nvar QRUtil = {\r\n\r\n    PATTERN_POSITION_TABLE : [\r\n\t    [],\r\n\t    [6, 18],\r\n\t    [6, 22],\r\n\t    [6, 26],\r\n\t    [6, 30],\r\n\t    [6, 34],\r\n\t    [6, 22, 38],\r\n\t    [6, 24, 42],\r\n\t    [6, 26, 46],\r\n\t    [6, 28, 50],\r\n\t    [6, 30, 54],\t\t\r\n\t    [6, 32, 58],\r\n\t    [6, 34, 62],\r\n\t    [6, 26, 46, 66],\r\n\t    [6, 26, 48, 70],\r\n\t    [6, 26, 50, 74],\r\n\t    [6, 30, 54, 78],\r\n\t    [6, 30, 56, 82],\r\n\t    [6, 30, 58, 86],\r\n\t    [6, 34, 62, 90],\r\n\t    [6, 28, 50, 72, 94],\r\n\t    [6, 26, 50, 74, 98],\r\n\t    [6, 30, 54, 78, 102],\r\n\t    [6, 28, 54, 80, 106],\r\n\t    [6, 32, 58, 84, 110],\r\n\t    [6, 30, 58, 86, 114],\r\n\t    [6, 34, 62, 90, 118],\r\n\t    [6, 26, 50, 74, 98, 122],\r\n\t    [6, 30, 54, 78, 102, 126],\r\n\t    [6, 26, 52, 78, 104, 130],\r\n\t    [6, 30, 56, 82, 108, 134],\r\n\t    [6, 34, 60, 86, 112, 138],\r\n\t    [6, 30, 58, 86, 114, 142],\r\n\t    [6, 34, 62, 90, 118, 146],\r\n\t    [6, 30, 54, 78, 102, 126, 150],\r\n\t    [6, 24, 50, 76, 102, 128, 154],\r\n\t    [6, 28, 54, 80, 106, 132, 158],\r\n\t    [6, 32, 58, 84, 110, 136, 162],\r\n\t    [6, 26, 54, 82, 110, 138, 166],\r\n\t    [6, 30, 58, 86, 114, 142, 170]\r\n    ],\r\n\r\n    G15 : (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\r\n    G18 : (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\r\n    G15_MASK : (1 << 14) | (1 << 12) | (1 << 10)\t| (1 << 4) | (1 << 1),\r\n\r\n    getBCHTypeInfo : function(data) {\r\n\t    var d = data << 10;\r\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\r\n\t\t    d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) ); \t\r\n\t    }\r\n\t    return ( (data << 10) | d) ^ QRUtil.G15_MASK;\r\n    },\r\n\r\n    getBCHTypeNumber : function(data) {\r\n\t    var d = data << 12;\r\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\r\n\t\t    d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) ); \t\r\n\t    }\r\n\t    return (data << 12) | d;\r\n    },\r\n\r\n    getBCHDigit : function(data) {\r\n\r\n\t    var digit = 0;\r\n\r\n\t    while (data != 0) {\r\n\t\t    digit++;\r\n\t\t    data >>>= 1;\r\n\t    }\r\n\r\n\t    return digit;\r\n    },\r\n\r\n    getPatternPosition : function(typeNumber) {\r\n\t    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\r\n    },\r\n\r\n    getMask : function(maskPattern, i, j) {\r\n\t    \r\n\t    switch (maskPattern) {\r\n\t\t    \r\n\t    case QRMaskPattern.PATTERN000 : return (i + j) % 2 == 0;\r\n\t    case QRMaskPattern.PATTERN001 : return i % 2 == 0;\r\n\t    case QRMaskPattern.PATTERN010 : return j % 3 == 0;\r\n\t    case QRMaskPattern.PATTERN011 : return (i + j) % 3 == 0;\r\n\t    case QRMaskPattern.PATTERN100 : return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0;\r\n\t    case QRMaskPattern.PATTERN101 : return (i * j) % 2 + (i * j) % 3 == 0;\r\n\t    case QRMaskPattern.PATTERN110 : return ( (i * j) % 2 + (i * j) % 3) % 2 == 0;\r\n\t    case QRMaskPattern.PATTERN111 : return ( (i * j) % 3 + (i + j) % 2) % 2 == 0;\r\n\r\n\t    default :\r\n\t\t    throw new Error(\"bad maskPattern:\" + maskPattern);\r\n\t    }\r\n    },\r\n\r\n    getErrorCorrectPolynomial : function(errorCorrectLength) {\r\n\r\n\t    var a = new Polynomial([1], 0);\r\n\r\n\t    for (var i = 0; i < errorCorrectLength; i++) {\r\n\t\t    a = a.multiply(new Polynomial([1, math.gexp(i)], 0) );\r\n\t    }\r\n\r\n\t    return a;\r\n    },\r\n\r\n    getLengthInBits : function(mode, type) {\r\n\r\n\t    if (1 <= type && type < 10) {\r\n\r\n\t\t    // 1 - 9\r\n\r\n\t\t    switch(mode) {\r\n\t\t    case Mode.MODE_NUMBER \t: return 10;\r\n\t\t    case Mode.MODE_ALPHA_NUM \t: return 9;\r\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 8;\r\n\t\t    case Mode.MODE_KANJI  \t: return 8;\r\n\t\t    default :\r\n\t\t\t    throw new Error(\"mode:\" + mode);\r\n\t\t    }\r\n\r\n\t    } else if (type < 27) {\r\n\r\n\t\t    // 10 - 26\r\n\r\n\t\t    switch(mode) {\r\n\t\t    case Mode.MODE_NUMBER \t: return 12;\r\n\t\t    case Mode.MODE_ALPHA_NUM \t: return 11;\r\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\r\n\t\t    case Mode.MODE_KANJI  \t: return 10;\r\n\t\t    default :\r\n\t\t\t    throw new Error(\"mode:\" + mode);\r\n\t\t    }\r\n\r\n\t    } else if (type < 41) {\r\n\r\n\t\t    // 27 - 40\r\n\r\n\t\t    switch(mode) {\r\n\t\t    case Mode.MODE_NUMBER \t: return 14;\r\n\t\t    case Mode.MODE_ALPHA_NUM\t: return 13;\r\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\r\n\t\t    case Mode.MODE_KANJI  \t: return 12;\r\n\t\t    default :\r\n\t\t\t    throw new Error(\"mode:\" + mode);\r\n\t\t    }\r\n\r\n\t    } else {\r\n\t\t    throw new Error(\"type:\" + type);\r\n\t    }\r\n    },\r\n\r\n    getLostPoint : function(qrCode) {\r\n\t    \r\n\t    var moduleCount = qrCode.getModuleCount();\r\n\t    \r\n\t    var lostPoint = 0;\r\n\t    \r\n\t    // LEVEL1\r\n\t    \r\n\t    for (var row = 0; row < moduleCount; row++) {\r\n\r\n\t\t    for (var col = 0; col < moduleCount; col++) {\r\n\r\n\t\t\t    var sameCount = 0;\r\n\t\t\t    var dark = qrCode.isDark(row, col);\r\n\r\n\t\t\t\tfor (var r = -1; r <= 1; r++) {\r\n\r\n\t\t\t\t    if (row + r < 0 || moduleCount <= row + r) {\r\n\t\t\t\t\t    continue;\r\n\t\t\t\t    }\r\n\r\n\t\t\t\t    for (var c = -1; c <= 1; c++) {\r\n\r\n\t\t\t\t\t    if (col + c < 0 || moduleCount <= col + c) {\r\n\t\t\t\t\t\t    continue;\r\n\t\t\t\t\t    }\r\n\r\n\t\t\t\t\t    if (r == 0 && c == 0) {\r\n\t\t\t\t\t\t    continue;\r\n\t\t\t\t\t    }\r\n\r\n\t\t\t\t\t    if (dark == qrCode.isDark(row + r, col + c) ) {\r\n\t\t\t\t\t\t    sameCount++;\r\n\t\t\t\t\t    }\r\n\t\t\t\t    }\r\n\t\t\t    }\r\n\r\n\t\t\t    if (sameCount > 5) {\r\n\t\t\t\t    lostPoint += (3 + sameCount - 5);\r\n\t\t\t    }\r\n\t\t    }\r\n\t    }\r\n\r\n\t    // LEVEL2\r\n\r\n\t    for (var row = 0; row < moduleCount - 1; row++) {\r\n\t\t    for (var col = 0; col < moduleCount - 1; col++) {\r\n\t\t\t    var count = 0;\r\n\t\t\t    if (qrCode.isDark(row,     col    ) ) count++;\r\n\t\t\t    if (qrCode.isDark(row + 1, col    ) ) count++;\r\n\t\t\t    if (qrCode.isDark(row,     col + 1) ) count++;\r\n\t\t\t    if (qrCode.isDark(row + 1, col + 1) ) count++;\r\n\t\t\t    if (count == 0 || count == 4) {\r\n\t\t\t\t    lostPoint += 3;\r\n\t\t\t    }\r\n\t\t    }\r\n\t    }\r\n\r\n\t    // LEVEL3\r\n\r\n\t    for (var row = 0; row < moduleCount; row++) {\r\n\t\t    for (var col = 0; col < moduleCount - 6; col++) {\r\n\t\t\t    if (qrCode.isDark(row, col)\r\n\t\t\t\t\t    && !qrCode.isDark(row, col + 1)\r\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 2)\r\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 3)\r\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 4)\r\n\t\t\t\t\t    && !qrCode.isDark(row, col + 5)\r\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 6) ) {\r\n\t\t\t\t    lostPoint += 40;\r\n\t\t\t    }\r\n\t\t    }\r\n\t    }\r\n\r\n\t    for (var col = 0; col < moduleCount; col++) {\r\n\t\t    for (var row = 0; row < moduleCount - 6; row++) {\r\n\t\t\t    if (qrCode.isDark(row, col)\r\n\t\t\t\t\t    && !qrCode.isDark(row + 1, col)\r\n\t\t\t\t\t    &&  qrCode.isDark(row + 2, col)\r\n\t\t\t\t\t    &&  qrCode.isDark(row + 3, col)\r\n\t\t\t\t\t    &&  qrCode.isDark(row + 4, col)\r\n\t\t\t\t\t    && !qrCode.isDark(row + 5, col)\r\n\t\t\t\t\t    &&  qrCode.isDark(row + 6, col) ) {\r\n\t\t\t\t    lostPoint += 40;\r\n\t\t\t    }\r\n\t\t    }\r\n\t    }\r\n\r\n\t    // LEVEL4\r\n\t    \r\n\t    var darkCount = 0;\r\n\r\n\t    for (var col = 0; col < moduleCount; col++) {\r\n\t\t    for (var row = 0; row < moduleCount; row++) {\r\n\t\t\t    if (qrCode.isDark(row, col) ) {\r\n\t\t\t\t    darkCount++;\r\n\t\t\t    }\r\n\t\t    }\r\n\t    }\r\n\t    \r\n\t    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\r\n\t    lostPoint += ratio * 10;\r\n\r\n\t    return lostPoint;\t\t\r\n    }\r\n};\r\n\r\nmodule.exports = QRUtil;\r\n", "var BitByte = require('./8BitByte');\r\nvar RSBlock = require('./RSBlock');\r\nvar BitBuffer = require('./BitBuffer');\r\nvar util = require('./util');\r\nvar Polynomial = require('./Polynomial');\r\n\r\nfunction QRCode(typeNumber, errorCorrectLevel) {\r\n\tthis.typeNumber = typeNumber;\r\n\tthis.errorCorrectLevel = errorCorrectLevel;\r\n\tthis.modules = null;\r\n\tthis.moduleCount = 0;\r\n\tthis.dataCache = null;\r\n\tthis.dataList = [];\r\n}\r\n\r\n// for client side minification\r\nvar proto = QRCode.prototype;\r\n\r\nproto.addData = function(data) {\r\n\tvar newData = new BitByte(data);\r\n\tthis.dataList.push(newData);\r\n\tthis.dataCache = null;\r\n};\r\n\r\nproto.isDark = function(row, col) {\r\n\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\r\n\t\tthrow new Error(row + \",\" + col);\r\n\t}\r\n\treturn this.modules[row][col];\r\n};\r\n\r\nproto.getModuleCount = function() {\r\n\treturn this.moduleCount;\r\n};\r\n\r\nproto.make = function() {\r\n\t// Calculate automatically typeNumber if provided is < 1\r\n\tif (this.typeNumber < 1 ){\r\n\t\tvar typeNumber = 1;\r\n\t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\r\n\t\t\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\r\n\r\n\t\t\tvar buffer = new BitBuffer();\r\n\t\t\tvar totalDataCount = 0;\r\n\t\t\tfor (var i = 0; i < rsBlocks.length; i++) {\r\n\t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < this.dataList.length; i++) {\r\n\t\t\t\tvar data = this.dataList[i];\r\n\t\t\t\tbuffer.put(data.mode, 4);\r\n\t\t\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\r\n\t\t\t\tdata.write(buffer);\r\n\t\t\t}\r\n\t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.typeNumber = typeNumber;\r\n\t}\r\n\tthis.makeImpl(false, this.getBestMaskPattern() );\r\n};\r\n\r\nproto.makeImpl = function(test, maskPattern) {\r\n\t\r\n\tthis.moduleCount = this.typeNumber * 4 + 17;\r\n\tthis.modules = new Array(this.moduleCount);\r\n\t\r\n\tfor (var row = 0; row < this.moduleCount; row++) {\r\n\t\t\r\n\t\tthis.modules[row] = new Array(this.moduleCount);\r\n\t\t\r\n\t\tfor (var col = 0; col < this.moduleCount; col++) {\r\n\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\r\n\t\t}\r\n\t}\r\n\r\n\tthis.setupPositionProbePattern(0, 0);\r\n\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\r\n\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\r\n\tthis.setupPositionAdjustPattern();\r\n\tthis.setupTimingPattern();\r\n\tthis.setupTypeInfo(test, maskPattern);\r\n\t\r\n\tif (this.typeNumber >= 7) {\r\n\t\tthis.setupTypeNumber(test);\r\n\t}\r\n\r\n\tif (this.dataCache == null) {\r\n\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\r\n\t}\r\n\r\n\tthis.mapData(this.dataCache, maskPattern);\r\n};\r\n\r\nproto.setupPositionProbePattern = function(row, col)  {\r\n\t\r\n\tfor (var r = -1; r <= 7; r++) {\r\n\t\t\r\n\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\r\n\t\t\r\n\t\tfor (var c = -1; c <= 7; c++) {\r\n\t\t\t\r\n\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\r\n\t\t\t\r\n\t\t\tif ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\r\n\t\t\t\t\t|| (0 <= c && c <= 6 && (r == 0 || r == 6) )\r\n\t\t\t\t\t|| (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\r\n\t\t\t\tthis.modules[row + r][col + c] = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.modules[row + r][col + c] = false;\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\t\t\r\n};\r\n\r\nproto.getBestMaskPattern = function() {\r\n\r\n\tvar minLostPoint = 0;\r\n\tvar pattern = 0;\r\n\r\n\tfor (var i = 0; i < 8; i++) {\r\n\t\t\r\n\t\tthis.makeImpl(true, i);\r\n\r\n\t\tvar lostPoint = util.getLostPoint(this);\r\n\r\n\t\tif (i == 0 || minLostPoint >  lostPoint) {\r\n\t\t\tminLostPoint = lostPoint;\r\n\t\t\tpattern = i;\r\n\t\t}\r\n\t}\r\n\r\n\treturn pattern;\r\n};\r\n\r\nproto.createMovieClip = function(target_mc, instance_name, depth) {\r\n\r\n\tvar qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\r\n\tvar cs = 1;\r\n\r\n\tthis.make();\r\n\r\n\tfor (var row = 0; row < this.modules.length; row++) {\r\n\t\t\r\n\t\tvar y = row * cs;\r\n\t\t\r\n\t\tfor (var col = 0; col < this.modules[row].length; col++) {\r\n\r\n\t\t\tvar x = col * cs;\r\n\t\t\tvar dark = this.modules[row][col];\r\n\t\t\r\n\t\t\tif (dark) {\r\n\t\t\t\tqr_mc.beginFill(0, 100);\r\n\t\t\t\tqr_mc.moveTo(x, y);\r\n\t\t\t\tqr_mc.lineTo(x + cs, y);\r\n\t\t\t\tqr_mc.lineTo(x + cs, y + cs);\r\n\t\t\t\tqr_mc.lineTo(x, y + cs);\r\n\t\t\t\tqr_mc.endFill();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn qr_mc;\r\n};\r\n\r\nproto.setupTimingPattern = function() {\r\n\t\r\n\tfor (var r = 8; r < this.moduleCount - 8; r++) {\r\n\t\tif (this.modules[r][6] != null) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tthis.modules[r][6] = (r % 2 == 0);\r\n\t}\r\n\r\n\tfor (var c = 8; c < this.moduleCount - 8; c++) {\r\n\t\tif (this.modules[6][c] != null) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tthis.modules[6][c] = (c % 2 == 0);\r\n\t}\r\n};\r\n\r\nproto.setupPositionAdjustPattern = function() {\r\n\r\n\tvar pos = util.getPatternPosition(this.typeNumber);\r\n\t\r\n\tfor (var i = 0; i < pos.length; i++) {\r\n\t\r\n\t\tfor (var j = 0; j < pos.length; j++) {\r\n\t\t\r\n\t\t\tvar row = pos[i];\r\n\t\t\tvar col = pos[j];\r\n\t\t\t\r\n\t\t\tif (this.modules[row][col] != null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (var r = -2; r <= 2; r++) {\r\n\t\t\t\r\n\t\t\t\tfor (var c = -2; c <= 2; c++) {\r\n\t\t\t\t\r\n\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2\r\n\t\t\t\t\t\t\t|| (r == 0 && c == 0) ) {\r\n\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nproto.setupTypeNumber = function(test) {\r\n\r\n\tvar bits = util.getBCHTypeNumber(this.typeNumber);\r\n\r\n\tfor (var i = 0; i < 18; i++) {\r\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\r\n\t}\r\n\r\n\tfor (var i = 0; i < 18; i++) {\r\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\r\n\t}\r\n};\r\n\r\nproto.setupTypeInfo = function(test, maskPattern) {\r\n\r\n\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\r\n\tvar bits = util.getBCHTypeInfo(data);\r\n\r\n\t// vertical\t\t\r\n\tfor (var i = 0; i < 15; i++) {\r\n\r\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\r\n\t\tif (i < 6) {\r\n\t\t\tthis.modules[i][8] = mod;\r\n\t\t} else if (i < 8) {\r\n\t\t\tthis.modules[i + 1][8] = mod;\r\n\t\t} else {\r\n\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\r\n\t\t}\r\n\t}\r\n\r\n\t// horizontal\r\n\tfor (var i = 0; i < 15; i++) {\r\n\r\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\t\t\r\n\t\tif (i < 8) {\r\n\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\r\n\t\t} else if (i < 9) {\r\n\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\r\n\t\t} else {\r\n\t\t\tthis.modules[8][15 - i - 1] = mod;\r\n\t\t}\r\n\t}\r\n\r\n\t// fixed module\r\n\tthis.modules[this.moduleCount - 8][8] = (!test);\r\n};\r\n\r\nproto.mapData = function(data, maskPattern) {\r\n\t\r\n\tvar inc = -1;\r\n\tvar row = this.moduleCount - 1;\r\n\tvar bitIndex = 7;\r\n\tvar byteIndex = 0;\r\n\t\r\n\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\r\n\r\n\t\tif (col == 6) col--;\r\n\r\n\t\twhile (true) {\r\n\r\n\t\t\tfor (var c = 0; c < 2; c++) {\r\n\t\t\t\t\r\n\t\t\t\tif (this.modules[row][col - c] == null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar dark = false;\r\n\r\n\t\t\t\t\tif (byteIndex < data.length) {\r\n\t\t\t\t\t\tdark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar mask = util.getMask(maskPattern, row, col - c);\r\n\r\n\t\t\t\t\tif (mask) {\r\n\t\t\t\t\t\tdark = !dark;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.modules[row][col - c] = dark;\r\n\t\t\t\t\tbitIndex--;\r\n\r\n\t\t\t\t\tif (bitIndex == -1) {\r\n\t\t\t\t\t\tbyteIndex++;\r\n\t\t\t\t\t\tbitIndex = 7;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\trow += inc;\r\n\r\n\t\t\tif (row < 0 || this.moduleCount <= row) {\r\n\t\t\t\trow -= inc;\r\n\t\t\t\tinc = -inc;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nQRCode.PAD0 = 0xEC;\r\nQRCode.PAD1 = 0x11;\r\n\r\nQRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {\r\n\t\r\n\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\r\n\t\r\n\tvar buffer = new BitBuffer();\r\n\t\r\n\tfor (var i = 0; i < dataList.length; i++) {\r\n\t\tvar data = dataList[i];\r\n\t\tbuffer.put(data.mode, 4);\r\n\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\r\n\t\tdata.write(buffer);\r\n\t}\r\n\r\n\t// calc num max data.\r\n\tvar totalDataCount = 0;\r\n\tfor (var i = 0; i < rsBlocks.length; i++) {\r\n\t\ttotalDataCount += rsBlocks[i].dataCount;\r\n\t}\r\n\r\n\tif (buffer.getLengthInBits() > totalDataCount * 8) {\r\n\t\tthrow new Error(\"code length overflow. (\"\r\n\t\t\t+ buffer.getLengthInBits()\r\n\t\t\t+ \">\"\r\n\t\t\t+  totalDataCount * 8\r\n\t\t\t+ \")\");\r\n\t}\r\n\r\n\t// end code\r\n\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\r\n\t\tbuffer.put(0, 4);\r\n\t}\r\n\r\n\t// padding\r\n\twhile (buffer.getLengthInBits() % 8 != 0) {\r\n\t\tbuffer.putBit(false);\r\n\t}\r\n\r\n\t// padding\r\n\twhile (true) {\r\n\t\t\r\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tbuffer.put(QRCode.PAD0, 8);\r\n\t\t\r\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tbuffer.put(QRCode.PAD1, 8);\r\n\t}\r\n\r\n\treturn QRCode.createBytes(buffer, rsBlocks);\r\n};\r\n\r\nQRCode.createBytes = function(buffer, rsBlocks) {\r\n\r\n\tvar offset = 0;\r\n\t\r\n\tvar maxDcCount = 0;\r\n\tvar maxEcCount = 0;\r\n\t\r\n\tvar dcdata = new Array(rsBlocks.length);\r\n\tvar ecdata = new Array(rsBlocks.length);\r\n\t\r\n\tfor (var r = 0; r < rsBlocks.length; r++) {\r\n\r\n\t\tvar dcCount = rsBlocks[r].dataCount;\r\n\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\r\n\r\n\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\r\n\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\r\n\t\t\r\n\t\tdcdata[r] = new Array(dcCount);\r\n\t\t\r\n\t\tfor (var i = 0; i < dcdata[r].length; i++) {\r\n\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\r\n\t\t}\r\n\t\toffset += dcCount;\r\n\t\t\r\n\t\tvar rsPoly = util.getErrorCorrectPolynomial(ecCount);\r\n\t\tvar rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\r\n\r\n\t\tvar modPoly = rawPoly.mod(rsPoly);\r\n\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\r\n\t\tfor (var i = 0; i < ecdata[r].length; i++) {\r\n            var modIndex = i + modPoly.getLength() - ecdata[r].length;\r\n\t\t\tecdata[r][i] = (modIndex >= 0)? modPoly.get(modIndex) : 0;\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\tvar totalCodeCount = 0;\r\n\tfor (var i = 0; i < rsBlocks.length; i++) {\r\n\t\ttotalCodeCount += rsBlocks[i].totalCount;\r\n\t}\r\n\r\n\tvar data = new Array(totalCodeCount);\r\n\tvar index = 0;\r\n\r\n\tfor (var i = 0; i < maxDcCount; i++) {\r\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\r\n\t\t\tif (i < dcdata[r].length) {\r\n\t\t\t\tdata[index++] = dcdata[r][i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor (var i = 0; i < maxEcCount; i++) {\r\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\r\n\t\t\tif (i < ecdata[r].length) {\r\n\t\t\t\tdata[index++] = ecdata[r][i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn data;\r\n};\r\n\r\nmodule.exports = QRCode;\r\n\r\n", "\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nvar _propTypes = require(\"prop-types\");\r\n\r\nvar _propTypes2 = _interopRequireDefault(_propTypes);\r\n\r\nvar _react = require(\"react\");\r\n\r\nvar _react2 = _interopRequireDefault(_react);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\r\n\r\nvar propTypes = {\r\n  bgColor: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]).isRequired,\r\n  bgD: _propTypes2.default.string.isRequired,\r\n  fgColor: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]).isRequired,\r\n  fgD: _propTypes2.default.string.isRequired,\r\n  size: _propTypes2.default.number.isRequired,\r\n  title: _propTypes2.default.string,\r\n  viewBoxSize: _propTypes2.default.number.isRequired,\r\n  xmlns: _propTypes2.default.string\r\n};\r\n\r\nvar QRCodeSvg = (0, _react.forwardRef)(function (_ref, ref) {\r\n  var bgColor = _ref.bgColor,\r\n      bgD = _ref.bgD,\r\n      fgD = _ref.fgD,\r\n      fgColor = _ref.fgColor,\r\n      size = _ref.size,\r\n      title = _ref.title,\r\n      viewBoxSize = _ref.viewBoxSize,\r\n      _ref$xmlns = _ref.xmlns,\r\n      xmlns = _ref$xmlns === undefined ? \"http://www.w3.org/2000/svg\" : _ref$xmlns,\r\n      props = _objectWithoutProperties(_ref, [\"bgColor\", \"bgD\", \"fgD\", \"fgColor\", \"size\", \"title\", \"viewBoxSize\", \"xmlns\"]);\r\n\r\n  return _react2.default.createElement(\r\n    \"svg\",\r\n    _extends({}, props, { height: size, ref: ref, viewBox: \"0 0 \" + viewBoxSize + \" \" + viewBoxSize, width: size, xmlns: xmlns }),\r\n    title ? _react2.default.createElement(\r\n      \"title\",\r\n      null,\r\n      title\r\n    ) : null,\r\n    _react2.default.createElement(\"path\", { d: bgD, fill: bgColor }),\r\n    _react2.default.createElement(\"path\", { d: fgD, fill: fgColor })\r\n  );\r\n});\r\n\r\nQRCodeSvg.displayName = \"QRCodeSvg\";\r\nQRCodeSvg.propTypes = propTypes;\r\n\r\nexports.default = QRCodeSvg;", "\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.QRCode = undefined;\r\n\r\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nvar _propTypes = require(\"prop-types\");\r\n\r\nvar _propTypes2 = _interopRequireDefault(_propTypes);\r\n\r\nvar _ErrorCorrectLevel = require(\"qr.js/lib/ErrorCorrectLevel\");\r\n\r\nvar _ErrorCorrectLevel2 = _interopRequireDefault(_ErrorCorrectLevel);\r\n\r\nvar _QRCode = require(\"qr.js/lib/QRCode\");\r\n\r\nvar _QRCode2 = _interopRequireDefault(_QRCode);\r\n\r\nvar _react = require(\"react\");\r\n\r\nvar _react2 = _interopRequireDefault(_react);\r\n\r\nvar _QRCodeSvg = require(\"./QRCodeSvg\");\r\n\r\nvar _QRCodeSvg2 = _interopRequireDefault(_QRCodeSvg);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\r\n// A `qr.js` doesn't handle error level of zero (M) so we need to do it right, thus the deep require.\r\n\r\n\r\nvar propTypes = {\r\n  bgColor: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),\r\n  fgColor: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),\r\n  level: _propTypes2.default.string,\r\n  size: _propTypes2.default.number,\r\n  value: _propTypes2.default.string.isRequired\r\n};\r\n\r\nvar QRCode = (0, _react.forwardRef)(function (_ref, ref) {\r\n  var _ref$bgColor = _ref.bgColor,\r\n      bgColor = _ref$bgColor === undefined ? \"#FFFFFF\" : _ref$bgColor,\r\n      _ref$fgColor = _ref.fgColor,\r\n      fgColor = _ref$fgColor === undefined ? \"#000000\" : _ref$fgColor,\r\n      _ref$level = _ref.level,\r\n      level = _ref$level === undefined ? \"L\" : _ref$level,\r\n      _ref$size = _ref.size,\r\n      size = _ref$size === undefined ? 256 : _ref$size,\r\n      value = _ref.value,\r\n      props = _objectWithoutProperties(_ref, [\"bgColor\", \"fgColor\", \"level\", \"size\", \"value\"]);\r\n\r\n  // Use type === -1 to automatically pick the best type.\r\n  var qrcode = new _QRCode2.default(-1, _ErrorCorrectLevel2.default[level]);\r\n  qrcode.addData(value);\r\n  qrcode.make();\r\n  var cells = qrcode.modules;\r\n  return _react2.default.createElement(_QRCodeSvg2.default, _extends({}, props, {\r\n    bgColor: bgColor,\r\n    bgD: cells.map(function (row, rowIndex) {\r\n      return row.map(function (cell, cellIndex) {\r\n        return !cell ? \"M \" + cellIndex + \" \" + rowIndex + \" l 1 0 0 1 -1 0 Z\" : \"\";\r\n      }).join(\" \");\r\n    }).join(\" \"),\r\n    fgColor: fgColor,\r\n    fgD: cells.map(function (row, rowIndex) {\r\n      return row.map(function (cell, cellIndex) {\r\n        return cell ? \"M \" + cellIndex + \" \" + rowIndex + \" l 1 0 0 1 -1 0 Z\" : \"\";\r\n      }).join(\" \");\r\n    }).join(\" \"),\r\n    ref: ref,\r\n    size: size,\r\n    viewBoxSize: cells.length\r\n  }));\r\n});\r\n\r\nexports.QRCode = QRCode;\r\nQRCode.displayName = \"QRCode\";\r\nQRCode.propTypes = propTypes;\r\n\r\nexports.default = QRCode;"],
  "mappings": "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",
  "names": []
}
